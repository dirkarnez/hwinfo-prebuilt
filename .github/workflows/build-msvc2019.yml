name: cpp-cmake-msvc2019-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'

jobs:
  build:
    name: Create Release
    runs-on: windows-2019
    env:
      libraryName: hwinfo
      cmakeInstallationPath: hwinfo-installation
      msvc2019TargetZip: hwinfo-${{ github.ref_name }}-msvc2019.zip
    steps:
    - name: git clone
      shell: cmd
      run: git clone --recursive https://github.com/lfreist/hwinfo.git
      
    - name: curl cmake-3.24.0-windows-x86_64.zip
      shell: cmd
      run: cd /d ${{ github.workspace }} && curl https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip -L --output cmake-3.24.0-windows-x86_64.zip && dir && 7z.exe x cmake-3.24.0-windows-x86_64.zip

    - name: set PATH, check mingw version, cmake generate, build and install
      shell: cmd
      run: |
          set PATH=${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;
          cd hwinfo && cmake.exe -G"Visual Studio 16 2019" -A x64 -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX="build/${{ env.cmakeInstallationPath }}" -B./build &&^
          cd build && cmake --build . --config Release --target ALL_BUILD -v -- /maxcpucount && cmake --install . 
    
    - name: cd
      shell: cmd
      run: cd hwinfo && cd build && cd x64 && cd Release && dir
      
    - name: Archive Release
      uses: thedoctor0/zip-release@master
      with:
        type: "zip"
        directory: "hwinfo/build/x64/Release"
        filename: "${{ env.msvc2019TargetZip }}"

    - name: Release prebuilt
      uses: ncipollo/release-action@v1
      with:
        artifacts: "hwinfo/build/x64/Release/${{ env.msvc2019TargetZip }}"
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
